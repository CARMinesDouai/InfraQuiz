WAComponent subclass: #InfraQuiz	instanceVariableNames: 'result'	classVariableNames: ''	poolDictionaries: ''	category: 'InfraQuiz'!!InfraQuiz commentStamp: 'MaxenceGodefert 4/30/2019 22:20' prior: 0!InfraQuiz est (pour le moment) une application qui permet d'exécuter du code Pharo depuis une page web et d'afficher le résultat de cette exécution.Cette application est réalisée dans le cadre d'un PDR et permettra à terme de réaliser un QUIZ où on peut saisir du code pour répondre à une question.Variables d'instances :	texte: <OrderedCollection<ByteString>>	resultat: <ByteString>	texte 	- Ensemble du code écrit, par défaut contient un String vide.	resultat	- Résultat de la dernière exécution (Correspond au printIt)!!InfraQuiz methodsFor: 'testing' stamp: 'LucFabresse 5/6/2019 11:12'!hasResult	^ self result notNil! !!InfraQuiz methodsFor: 'initialization' stamp: 'LucFabresse 5/6/2019 11:14'!initialize 	super initialize.	result := nil! !!InfraQuiz methodsFor: 'content' stamp: 'LucFabresse 5/6/2019 11:13'!renderContentOn: htmlhtml tbsContainer	with: [ 	html heading level: 2; with: self class description.	html tbsForm: [		html tbsFormGroup: [ 			html label for: 'inputCode'; with: 'Your Code:'.			html textArea 				style: 'width: 60%; height: 200px';				callback: [ :code | self executeCode: code ];				tbsFormControl; 				id: 'exampleInputEmail1'; 				text: '10 factorial'		].					html tbsSubmitButton 			bePrimary;			with: 'Execute'.		html space.		html tbsButton			beDefault;			callback: [ self resetResult ];			with: 'Reset'.	].		html div		class: 'spacer';		style: 'height: 50px'.		self hasResult ifTrue: [ 		html heading level:4; with: 'Output:'.		html textArea 			style: 'width: 60%; height: 200px';			text: self result	]]! !!InfraQuiz methodsFor: 'accessing' stamp: 'LucFabresse 5/6/2019 11:15'!result: anObject	result := anObject! !!InfraQuiz methodsFor: 'accessing' stamp: 'LucFabresse 5/6/2019 11:15'!result	^ result! !!InfraQuiz methodsFor: 'actions' stamp: 'LucFabresse 5/6/2019 11:11'!executeCode: code	"Exécute tout le code de notre collection. 	En cas d'erreur, il remplit la variable résultat avec l'erreur pour qu'elle ne bloque pas l'application."	[self result: (AbstractCompiler evaluate: code)] on: Error do: [ :e | self result: 'Oops!! ' , e className , '!!' ].! !!InfraQuiz methodsFor: 'actions' stamp: 'LucFabresse 5/6/2019 11:13'!resetResult	self result: nil! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!InfraQuiz class	instanceVariableNames: ''!!InfraQuiz class methodsFor: 'initialization' stamp: 'MaxenceGodefert 4/30/2019 15:54'!initialize"self initialize"| app |app := WAAdmin register: self asApplicationAt: self handlerName.app addLibrary: JQDeploymentLibrary.app addLibrary: JQUiDeploymentLibrary.app addLibrary: TBSDeploymentLibrary.! !!InfraQuiz class methodsFor: 'initialization' stamp: 'LucFabresse 5/6/2019 10:37'!canBeRoot	^true! !!InfraQuiz class methodsFor: 'acccessing' stamp: 'MaxenceGodefert 3/24/2019 14:08'!handlerName	^'InfraQuiz'! !!InfraQuiz class methodsFor: 'acccessing' stamp: 'LucFabresse 5/6/2019 10:38'!description	^'Un site de quiz pour apprendre à programmer'! !InfraQuiz initialize!